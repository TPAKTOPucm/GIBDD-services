// <auto-generated />
using System;
using ConfiscationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ConfiscationService.Migrations
{
    [DbContext(typeof(ConfiscationContext))]
    partial class ConfiscationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConfiscationService.Models.ConfiscationOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("boolean");

                    b.Property<int>("Reason")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ConfiscationOrders");
                });

            modelBuilder.Entity("ConfiscationService.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("UnpaidFineCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ConfiscationService.Models.ConfiscationOrder", b =>
                {
                    b.OwnsOne("ConfiscationService.Models.Address", "ImpoundYardAddress", b1 =>
                        {
                            b1.Property<Guid>("ConfiscationOrderId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CityType")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long?>("Home")
                                .HasColumnType("bigint");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long>("ZipCode")
                                .HasColumnType("bigint");

                            b1.HasKey("ConfiscationOrderId");

                            b1.ToTable("ConfiscationOrders");

                            b1.WithOwner()
                                .HasForeignKey("ConfiscationOrderId");
                        });

                    b.OwnsOne("ConfiscationService.Models.LicensePlate", "LicensePlate", b1 =>
                        {
                            b1.Property<Guid>("ConfiscationOrderId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BaseNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long>("Region")
                                .HasColumnType("bigint");

                            b1.HasKey("ConfiscationOrderId");

                            b1.ToTable("ConfiscationOrders");

                            b1.WithOwner()
                                .HasForeignKey("ConfiscationOrderId");
                        });

                    b.Navigation("ImpoundYardAddress");

                    b.Navigation("LicensePlate")
                        .IsRequired();
                });

            modelBuilder.Entity("ConfiscationService.Models.Vehicle", b =>
                {
                    b.OwnsOne("ConfiscationService.Models.LicensePlate", "LicensePlate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BaseNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long>("Region")
                                .HasColumnType("bigint");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.Navigation("LicensePlate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
